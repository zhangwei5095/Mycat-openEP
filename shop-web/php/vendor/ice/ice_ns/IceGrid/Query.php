<?php
// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Query.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace
{
    require_once 'Ice/Identity.php';
    require_once 'Ice/BuiltinSequences.php';
    require_once 'IceGrid/Exception.php';
}

namespace IceGrid
{
    if(!class_exists('\\IceGrid\\LoadSample'))
    {
        class LoadSample
        {
            const LoadSample1 = 0;
            const LoadSample5 = 1;
            const LoadSample15 = 2;
        }

        $IceGrid__t_LoadSample = IcePHP_defineEnum('::IceGrid::LoadSample', array('LoadSample1', 0, 'LoadSample5', 1, 'LoadSample15', 2));
    }
}

namespace IceGrid
{
    if(!interface_exists('\\IceGrid\\Query'))
    {
        interface Query
        {
            public function findObjectById($id);
            public function findObjectByType($type);
            public function findObjectByTypeOnLeastLoadedNode($type, $sample);
            public function findAllObjectsByType($type);
            public function findAllReplicas($proxy);
        }

        class QueryPrxHelper
        {
            public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
            {
                return $proxy->ice_checkedCast('::IceGrid::Query', $facetOrCtx, $ctx);
            }

            public static function uncheckedCast($proxy, $facet=null)
            {
                return $proxy->ice_uncheckedCast('::IceGrid::Query', $facet);
            }
        }

        $IceGrid__t_Query = IcePHP_defineClass('::IceGrid::Query', '\\IceGrid\\Query', -1, true, false, $Ice__t_Object, null, null);

        $IceGrid__t_QueryPrx = IcePHP_defineProxy($IceGrid__t_Query);

        IcePHP_defineOperation($IceGrid__t_Query, 'findObjectById', 2, 1, 0, array(array($Ice__t_Identity, false, 0)), null, array($Ice__t_ObjectPrx, false, 0), null);
        IcePHP_defineOperation($IceGrid__t_Query, 'findObjectByType', 2, 1, 0, array(array($IcePHP__t_string, false, 0)), null, array($Ice__t_ObjectPrx, false, 0), null);
        IcePHP_defineOperation($IceGrid__t_Query, 'findObjectByTypeOnLeastLoadedNode', 2, 1, 0, array(array($IcePHP__t_string, false, 0), array($IceGrid__t_LoadSample, false, 0)), null, array($Ice__t_ObjectPrx, false, 0), null);
        IcePHP_defineOperation($IceGrid__t_Query, 'findAllObjectsByType', 2, 1, 0, array(array($IcePHP__t_string, false, 0)), null, array($Ice__t_ObjectProxySeq, false, 0), null);
        IcePHP_defineOperation($IceGrid__t_Query, 'findAllReplicas', 2, 2, 0, array(array($Ice__t_ObjectPrx, false, 0)), null, array($Ice__t_ObjectProxySeq, false, 0), null);
    }
}
?>
