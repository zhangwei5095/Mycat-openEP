<?php
// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace
{
    require_once 'Ice/Metrics.php';
}

namespace IceMX
{
    if(!class_exists('\\IceMX\\SessionMetrics'))
    {
        class SessionMetrics extends \IceMX\Metrics
        {
            public function __construct($id='', $total=0, $current=0, $totalLifetime=0, $failures=0, $forwardedClient=0, $forwardedServer=0, $routingTableSize=0, $queuedClient=0, $queuedServer=0, $overriddenClient=0, $overriddenServer=0)
            {
                parent::__construct($id, $total, $current, $totalLifetime, $failures);
                $this->forwardedClient = $forwardedClient;
                $this->forwardedServer = $forwardedServer;
                $this->routingTableSize = $routingTableSize;
                $this->queuedClient = $queuedClient;
                $this->queuedServer = $queuedServer;
                $this->overriddenClient = $overriddenClient;
                $this->overriddenServer = $overriddenServer;
            }

            public static function ice_staticId()
            {
                return '::IceMX::SessionMetrics';
            }

            public function __toString()
            {
                global $IceMX__t_SessionMetrics;
                return IcePHP_stringify($this, $IceMX__t_SessionMetrics);
            }

            public $forwardedClient;
            public $forwardedServer;
            public $routingTableSize;
            public $queuedClient;
            public $queuedServer;
            public $overriddenClient;
            public $overriddenServer;
        }

        class SessionMetricsPrxHelper
        {
            public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
            {
                return $proxy->ice_checkedCast('::IceMX::SessionMetrics', $facetOrCtx, $ctx);
            }

            public static function uncheckedCast($proxy, $facet=null)
            {
                return $proxy->ice_uncheckedCast('::IceMX::SessionMetrics', $facet);
            }
        }

        $IceMX__t_SessionMetrics = IcePHP_defineClass('::IceMX::SessionMetrics', '\\IceMX\\SessionMetrics', -1, false, false, $IceMX__t_Metrics, null, array(
            array('forwardedClient', $IcePHP__t_int, false, 0),
            array('forwardedServer', $IcePHP__t_int, false, 0),
            array('routingTableSize', $IcePHP__t_int, false, 0),
            array('queuedClient', $IcePHP__t_int, false, 0),
            array('queuedServer', $IcePHP__t_int, false, 0),
            array('overriddenClient', $IcePHP__t_int, false, 0),
            array('overriddenServer', $IcePHP__t_int, false, 0)));

        $IceMX__t_SessionMetricsPrx = IcePHP_defineProxy($IceMX__t_SessionMetrics);
    }
}
?>
